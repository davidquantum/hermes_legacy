include(PickRealOrCplxLibs)

macro(SET_COMMON_TARGET_PROPERTIES TRGT)
  # Each test can define the particular hermes library to link with, or not
  # define anything, in which case the "real" version will be used if hermes was
  # built with "real" support, otherwise the "complex" version will be used:
  if(${ARGC} EQUAL 1)
    if(H3D_REAL)
        set(HERMES ${HERMES3D_REAL})
    else(H3D_REAL)
        set(HERMES ${HERMES3D_CPLX})
    endif(H3D_REAL)
  elseif(${ARGC} EQUAL 2)
    set(HERMES ${ARGV1})
  endif(${ARGC} EQUAL 1) 

  set(FLAGS)
  
  # Should debugging information be included for the test?
  if(DEBUG)
    set(FLAGS "${FLAGS} -g")
  endif(DEBUG)

  # If the complex version is being used, define 'H3D_COMPLEX'.
  if(H3D_COMPLEX)
    if(${HERMES} STREQUAL ${HERMES3D_CPLX})
        set(FLAGS "${FLAGS} -DH3D_COMPLEX")
    endif(${HERMES} STREQUAL ${HERMES3D_CPLX})
  endif(H3D_COMPLEX)
  # If the real version is being used, define 'H3D_REAL'.
  if(H3D_REAL)
    if(${HERMES} STREQUAL ${HERMES3D_REAL})
        set(FLAGS "${FLAGS} -DH3D_REAL")
    endif(${HERMES} STREQUAL ${HERMES3D_REAL})
  endif(H3D_REAL)
  
  set_property(TARGET ${TRGT} PROPERTY COMPILE_FLAGS ${FLAGS})

  include_directories(${CMAKE_CURRENT_SOURCE_DIR})
  include_directories(${hermes3d_SOURCE_DIR}/src)

  PICK_REAL_OR_CPLX_LIBS(${HERMES} ${TRGT})

  target_link_libraries(${TRGT} ${HERMES} ${TRILINOS_LIBRARIES})
  add_dependencies(${TRGT} ${HERMES})
  
  if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake)
    configure_file(
    	${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake
    	${CMAKE_CURRENT_SOURCE_DIR}/config.h
    )
  endif(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake)
  # Otherwise src/config.h will be used

endmacro(SET_COMMON_TARGET_PROPERTIES)
